// DO NOT EDIT THIS FILE DIRECTLY!
// This file was automatically generated by `generate_dope_interfaces.py`

void make_dope_1d_bool(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_1d_int(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_1d_float(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_1d_double(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_2d_bool(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_2d_int(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_2d_float(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_2d_double(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_3d_bool(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_3d_int(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_3d_float(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

void make_dope_3d_double(dope_base& d, CFI_cdesc_t const& a) {
  assert(dope_base::base_size+a.rank*dope_base::per_rank_size <= dope_base::buffer_size);
  std::memcpy(&d, &a, dope_base::base_size + a.rank * dope_base::per_rank_size);
}

